
package core;

import java.util.List;


public interface ReflectionJdbcDao <T> {
    /**
* Вставка объекта в соответствующую таблицу БД
* @param object объект, поля которого вставляются в запись в
таблице
* Если таблицы не существует, то она создается
*/
public void insert(T object);
/**
* Обновление соответствующей записи в таблице БД.
* @param object объект, поля которого обновляются в записи в
таблице;
* идентификация записи происходит по ключевым
полям объекта
*/
public void update(T object);
/**
* Удаление объекта из таблицы БД. Идентификация записи
происходит по ключевым полям объекта.
* Остальные поля объекта в методе не используются и могут
быть не заполнены.
* @param key удаляемый объект с заполненными ключевыми
полями par*/
public void deleteByKey(T key);
/**
* Выборка из таблицы БД объекта. Идентификация записи
происходит по ключевым полям объекта.
* Остальные поля объекта в методе не используются и могут
быть не заполнены.
* @param key выбираемый объект с заполненными ключевыми
полями
* @return выбранный из БД объект со всеми заполненными
полями
7*/
public T selectByKey(T key);
/**
* Выборка всех объектов из соответствующей таблицы БД.
* @return список выбранных объектов
*/
public List <T> selectAll();
}
